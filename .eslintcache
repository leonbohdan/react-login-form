[{"C:\\learn_IT\\projects\\react-login-form\\src\\index.js":"1","C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx":"2","C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx":"3","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js":"4","C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx":"5","C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx":"6","C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx":"7","C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx":"8","C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx":"9"},{"size":287,"mtime":1606295371180,"results":"10","hashOfConfig":"11"},{"size":1235,"mtime":1606414401258,"results":"12","hashOfConfig":"11"},{"size":2961,"mtime":1606415204945,"results":"13","hashOfConfig":"11"},{"size":672,"mtime":1606379915510,"results":"14","hashOfConfig":"11"},{"size":5051,"mtime":1606419170149,"results":"15","hashOfConfig":"11"},{"size":1501,"mtime":1606419130713,"results":"16","hashOfConfig":"11"},{"size":1131,"mtime":1606417205669,"results":"17","hashOfConfig":"11"},{"size":1725,"mtime":1606418223970,"results":"18","hashOfConfig":"11"},{"size":4998,"mtime":1606416679158,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hbdxwq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\learn_IT\\projects\\react-login-form\\src\\index.js",[],["41","42"],"C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx",["43"],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx",["44","45"],"import './Login.scss';\nimport 'bulma';\nimport { useEffect, useState } from 'react';\nimport { usersBase } from '../../store/initialState';\n\nexport const Login = ({\n  setToRegistration,\n  setRegistered,\n  setChoosenUser\n}) => {\n  const [missPassword, setMissPassword] = useState(false);\n  const [choosenLogin, setChoosenLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [usersFromLocal, setUsersFromLocal] = useState(JSON.parse(localStorage.getItem('users')) || usersBase);\n  \n  // useEffect(() => {\n  //   let users = JSON.parse(localStorage.getItem('users'));\n  //   setUsersFromLocal(users);\n  // }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!usersFromLocal.map((user) => user.login).includes(choosenLogin)) {\n      setToRegistration(true);\n      return;\n    }\n\n    setChoosenUser(choosenLogin);\n\n    if (usersFromLocal.find(\n      user => (user.login === choosenLogin)\n    ).password + '' !== password) {\n      setMissPassword(true);\n      return;\n    }\n\n    usersFromLocal.map((user) => user.login).includes(choosenLogin)\n      ? setRegistered(true)\n      : setToRegistration(true);\n  };\n  \n  return (\n    <div className=\"login\">\n      <h1 className=\"login__heading\">Sign in form</h1>\n      <h2 className=\"login__description\">\n        Choose your login and password or input new for registration\n      </h2>\n\n      <form\n        className=\"login__form form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          className=\"login__input input\"\n          type=\"text\"\n          name=\"users\"\n          list=\"users\"\n          required\n          placeholder=\"Login\"\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        />\n        <datalist\n          className=\"login__datalist\"\n          id=\"users\"\n          name=\"users\"\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        >\n          {usersFromLocal.map((user) => (\n            <option key={user.id} value={user.login}>\n              {user.login}\n            </option>\n          ))}\n        </datalist>\n\n        <input\n          className=\"login__input input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n\n        {missPassword && (\n          <span\n            className=\"login__wrongPassword\"\n          >\n            Check your password\n          </span>\n        )}\n\n        {choosenLogin && password ? (\n          <button className=\"login__button button\" type=\"submit\">\n            Sign in\n          </button>\n        ) : (\n          <button className=\"login__button button\" type=\"submit\" disabled>\n            Sign in\n          </button>\n        )}\n      </form>\n    </div>\n  );\n}\n","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx",["46"],"import './UserPage.scss';\nimport 'bulma';\nimport { useState } from 'react';\nimport CN from 'classnames';\nimport { EditForm } from '../EditForm/EditForm';\nimport { AllUsers } from '../AllUsers/AllUsers';\nimport { TextField } from '../TextField/TextField';\n\nexport const UserPage = ({ choosenUser }) => {\n  const initialTabs = [\n    {\n      id: 1,\n      title: \"Change user information\",\n      content: <EditForm choosenUser={choosenUser} />,\n    },\n    {\n      id: 2,\n      title: \"Show all users\",\n      content: <AllUsers />,\n    },\n    {\n      id: 3,\n      title: \"Add text\",\n      content: <TextField />,\n    },\n  ];\n\n  const [tabs, setTabs] = useState(initialTabs);\n  const [id, setId] = useState(0);\n\n  return (\n    <>\n      <section className=\"userPage\">\n        <h1 className=\"userPage__heading\">UserPage</h1>\n\n        <div className=\"userPage__buttons tabs is-centered\">\n          <ul className=\"userPage__list\">\n            {tabs.map((tab, i) => (\n              <li\n                type=\"button\"\n                key={tab.id}\n                className={CN(\"userPage__button\", {\n                  \"is-active\": tab.id === id + 1,\n                })}\n                onClick={() => {\n                  setId(i);\n                }}\n              >\n                <a className=\"userPage__name\" href=\" #\">{tab.title}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <article className=\"userPage__message\">{tabs[id].content}</article>\n      </section>\n    </>\n  );\n};\n","C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":9,"column":17,"nodeType":"53","messageId":"54","endLine":9,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":19},{"ruleId":"51","severity":1,"message":"56","line":14,"column":26,"nodeType":"53","messageId":"54","endLine":14,"endColumn":43},{"ruleId":"51","severity":1,"message":"57","line":28,"column":16,"nodeType":"53","messageId":"54","endLine":28,"endColumn":23},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'setUsers' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setUsersFromLocal' is assigned a value but never used.","'setTabs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]