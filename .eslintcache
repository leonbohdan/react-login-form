[{"C:\\learn_IT\\projects\\react-login-form\\src\\index.js":"1","C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx":"2","C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx":"3","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js":"4","C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx":"5","C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx":"6","C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx":"7","C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx":"8","C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx":"9"},{"size":287,"mtime":1606295371180,"results":"10","hashOfConfig":"11"},{"size":1475,"mtime":1606407444569,"results":"12","hashOfConfig":"11"},{"size":2510,"mtime":1606406916753,"results":"13","hashOfConfig":"11"},{"size":672,"mtime":1606379915510,"results":"14","hashOfConfig":"11"},{"size":4077,"mtime":1606406720275,"results":"15","hashOfConfig":"11"},{"size":1688,"mtime":1606334140447,"results":"16","hashOfConfig":"11"},{"size":1105,"mtime":1606332235732,"results":"17","hashOfConfig":"11"},{"size":1449,"mtime":1606331997425,"results":"18","hashOfConfig":"11"},{"size":4503,"mtime":1606407348312,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hbdxwq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\learn_IT\\projects\\react-login-form\\src\\index.js",[],["40","41"],"C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx",["42"],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx",["43","44"],"import './Login.scss';\nimport { useEffect, useState } from 'react';\nimport { usersBase } from '../../store/initialState';\n\nexport const Login = ({\n  setToRegistration,\n  setRegistered,\n  setChoosenUser\n}) => {\n  const [missPassword, setMissPassword] = useState(false);\n  const [choosenLogin, setChoosenLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [usersFromLocal, setUsersFromLocal] = useState(JSON.parse(localStorage.getItem('users')) || usersBase);\n  \n  // useEffect(() => {\n  //   let users = JSON.parse(localStorage.getItem('users'));\n  //   setUsersFromLocal(users);\n  // }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!usersFromLocal.map((user) => user.login).includes(choosenLogin)) {\n      setToRegistration(true);\n      return;\n    }\n\n    setChoosenUser(choosenLogin);\n\n    if (usersFromLocal.find(\n      user => (user.login === choosenLogin)\n    ).password + '' !== password) {\n      setMissPassword(true);\n      return;\n    }\n\n    usersFromLocal.map((user) => user.login).includes(choosenLogin)\n      ? setRegistered(true)\n      : setToRegistration(true);\n  };\n  \n  return (\n    <>\n      <h1>Sign in form</h1>\n      <h2>Choose your login and password or input new for registration</h2>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"users\"\n          list=\"users\"\n          required\n          placeholder=\"Login\"\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        />\n        <datalist\n          id=\"users\"\n          name=\"users\"\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        >\n          {usersFromLocal.map((user) => (\n            <option key={user.id} value={user.login}>\n              {user.login}\n            </option>\n          ))}\n        </datalist>\n\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n\n        {missPassword ? (\n          <span>Check your password</span>\n        ) : ('')}\n\n        {choosenLogin && password ? (\n          <button type=\"submit\">Sign in</button>\n        ) : (\n          <button type=\"submit\" disabled>\n            Sign in\n          </button>\n        )}\n      </form>\n    </>\n  );\n}","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx",["45"],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx",["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":9,"column":17,"nodeType":"54","messageId":"55","endLine":9,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":13,"column":26,"nodeType":"54","messageId":"55","endLine":13,"endColumn":43},{"ruleId":"52","severity":1,"message":"58","line":29,"column":16,"nodeType":"54","messageId":"55","endLine":29,"endColumn":23},{"ruleId":"52","severity":1,"message":"59","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":17},{"ruleId":"52","severity":1,"message":"60","line":10,"column":19,"nodeType":"54","messageId":"55","endLine":10,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setUsers' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setUsersFromLocal' is assigned a value but never used.","'setTabs' is assigned a value but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]