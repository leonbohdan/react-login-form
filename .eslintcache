[{"C:\\learn_IT\\projects\\react-login-form\\src\\index.js":"1","C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx":"2","C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx":"3","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js":"4","C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx":"5","C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx":"6","C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx":"7","C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx":"8","C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx":"9"},{"size":287,"mtime":1606295371180,"results":"10","hashOfConfig":"11"},{"size":1278,"mtime":1606463998921,"results":"12","hashOfConfig":"11"},{"size":3014,"mtime":1606479055265,"results":"13","hashOfConfig":"11"},{"size":1167,"mtime":1606478976537,"results":"14","hashOfConfig":"11"},{"size":5991,"mtime":1606477001321,"results":"15","hashOfConfig":"11"},{"size":1501,"mtime":1606419130713,"results":"16","hashOfConfig":"11"},{"size":1160,"mtime":1606477063923,"results":"17","hashOfConfig":"11"},{"size":1947,"mtime":1606478846498,"results":"18","hashOfConfig":"11"},{"size":5912,"mtime":1606477566999,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"hbdxwq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\learn_IT\\projects\\react-login-form\\src\\index.js",[],["43","44"],"C:\\learn_IT\\projects\\react-login-form\\src\\App.jsx",["45"],"import './App.scss';\nimport { useState, useEffect } from 'react';\nimport { usersBase } from './store/initialState';\nimport { Login } from './components/Login/Login';\nimport { RegForm } from './components/RegForm/RegForm';\nimport { UserPage } from './components/UserPage/UserPage';\n\nfunction App() {\n  const [users, setUsers] = useState(usersBase);\n  const [toRegistration, setToRegistration] = useState(false);\n  const [registered, setRegistered] = useState(false);\n  const [choosenUser, setChoosenUser] = useState(0);\n\n  useEffect(() => {\n    if (localStorage.getItem('users') !== null) {\n      return;\n    }\n\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  return (\n    <div className=\"App section\">\n      {!(toRegistration || registered) && (\n        <Login\n          setToRegistration={setToRegistration}\n          setRegistered={setRegistered}\n          setChoosenUser={setChoosenUser}\n        />\n      )}\n\n      {toRegistration && (\n        <RegForm\n          setToRegistration={setToRegistration}\n          setRegistered={setRegistered}\n          setChoosenUser={setChoosenUser}\n        />\n      )}\n\n      {registered && <UserPage choosenUser={choosenUser} />}\n\n      <div className=\"App__footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\learn_IT\\projects\\react-login-form\\src\\components\\Login\\Login.jsx",["46"],"import './Login.scss';\nimport 'bulma';\nimport { useState } from 'react';\nimport { usersBase } from '../../store/initialState';\n\nexport const Login = ({\n  setToRegistration,\n  setRegistered,\n  setChoosenUser\n}) => {\n  const [missPassword, setMissPassword] = useState(false);\n  const [choosenLogin, setChoosenLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [usersFromLocal, setUsersFromLocal] = useState(JSON.parse(localStorage.getItem('users')) || usersBase);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!usersFromLocal.map((user) => user.login).includes(choosenLogin)) {\n      setToRegistration(true);\n      return;\n    } else {\n      usersFromLocal.filter((user) => {\n        if (user.login === choosenLogin) {\n          setChoosenUser(user.id);\n        }\n        return -1;\n      });\n    }\n\n    if (usersFromLocal.find(\n      user => (user.login === choosenLogin)\n    ).password + '' !== password) {\n      setMissPassword(true);\n      return;\n    }\n\n    usersFromLocal.map((user) => user.login).includes(choosenLogin)\n      ? setRegistered(true)\n      : setToRegistration(true);\n  };\n  \n  return (\n    <div className=\"login\">\n      <h1 className=\"login__heading\">Sign in form</h1>\n      <h2 className=\"login__description\">\n        Choose your login and password or input new for registration\n      </h2>\n\n      <form\n        className=\"login__form form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          className=\"login__input input\"\n          type=\"text\"\n          name=\"users\"\n          list=\"users\"\n          placeholder=\"Login\"\n          pattern=\"[A-Za-z0-9]{4,12}\"\n          title=\"Login must be between 4 and 12 characters in length and contain only letters and numbers\"\n          required\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        />\n        <datalist\n          className=\"login__datalist\"\n          id=\"users\"\n          name=\"users\"\n          value={choosenLogin}\n          onChange={(event) => {\n            setChoosenLogin(event.target.value);\n          }}\n        >\n          {usersFromLocal.map((user) => (\n            <option key={user.id} value={user.login}>\n              {user.login}\n            </option>\n          ))}\n        </datalist>\n\n        <input\n          className=\"login__input input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          pattern=\"[A-Za-z0-9]{4,12}\"\n          title=\"Password must be between 4 and 12 characters in length and contain only letters and numbers\"\n          required\n          value={password}\n          onChange={(event) => {\n            setPassword(event.target.value);\n          }}\n        />\n\n\n        <button className=\"login__button button\" type=\"submit\">\n          Sign in\n        </button>\n\n        {missPassword && (\n          <span className=\"login__wrongPassword\">Check your password</span>\n        )}\n      </form>\n    </div>\n  );\n}\n","C:\\learn_IT\\projects\\react-login-form\\src\\store\\initialState.js",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\RegForm\\RegForm.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\UserPage\\UserPage.jsx",["47"],"import './UserPage.scss';\nimport 'bulma';\nimport { useState } from 'react';\nimport CN from 'classnames';\nimport { EditForm } from '../EditForm/EditForm';\nimport { AllUsers } from '../AllUsers/AllUsers';\nimport { TextField } from '../TextField/TextField';\n\nexport const UserPage = ({ choosenUser }) => {\n  const initialTabs = [\n    {\n      id: 1,\n      title: \"Change user information\",\n      content: <EditForm choosenUser={choosenUser} />,\n    },\n    {\n      id: 2,\n      title: \"Show all users\",\n      content: <AllUsers />,\n    },\n    {\n      id: 3,\n      title: \"Add text\",\n      content: <TextField />,\n    },\n  ];\n\n  const [tabs, setTabs] = useState(initialTabs);\n  const [id, setId] = useState(0);\n\n  return (\n    <>\n      <section className=\"userPage\">\n        <h1 className=\"userPage__heading\">UserPage</h1>\n\n        <div className=\"userPage__buttons tabs is-centered\">\n          <ul className=\"userPage__list\">\n            {tabs.map((tab, i) => (\n              <li\n                type=\"button\"\n                key={tab.id}\n                className={CN(\"userPage__button\", {\n                  \"is-active\": tab.id === id + 1,\n                })}\n                onClick={() => {\n                  setId(i);\n                }}\n              >\n                <a className=\"userPage__name\" href=\" #\">{tab.title}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <article className=\"userPage__message\">{tabs[id].content}</article>\n      </section>\n    </>\n  );\n};\n","C:\\learn_IT\\projects\\react-login-form\\src\\components\\AllUsers\\AllUsers.jsx",[],"C:\\learn_IT\\projects\\react-login-form\\src\\components\\TextField\\TextField.jsx",["48"],"import './TextField.scss';\nimport 'bulma';\nimport { initialText } from '../../store/initialState';\nimport { useEffect, useState } from 'react';\n\nexport const TextField = () => {\n  const [empty, setEmpty] = useState(false);\n  const [query, setQuery] = useState('');\n  const [comment, setComment] = useState(initialText);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!comment) {\n      setComment(initialText);\n    }\n\n    if (!query) {\n      setEmpty(true);\n      return;\n    }\n\n    setEmpty(false);\n    setComment('');\n    setComment(query);\n    setQuery('');\n  };\n\n  return (\n    <div className=\"textfield\">\n      <h1 className=\"textfield__heading\">\n        Save some text\n      </h1>\n\n      <form\n        className=\"textfield__container form\"\n        onSubmit={handleSubmit}\n      >\n        <label\n          htmlFor=\"input\"\n          className=\"textfield__label label\"\n        >\n          Input\n          <textarea\n            className=\"textfield__text textarea\"\n            id=\"input\"\n            placeholder=\"Type your text here\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"output\"\n          className=\"textfield__label label\"\n        >\n          Output\n          <textarea\n            className=\"textfield__text textarea\"\n            id=\"output\"\n            placeholder=\"Your saved text\"\n            value={comment}\n            onChange={(event) => {\n              setComment(event.target.value);\n            }}\n          />\n        </label>\n\n        <button\n          className=\"textfield__button button is-primary\"\n          type=\"submit\"\n        >\n          Save text\n        </button>\n      </form>\n\n      {empty ? (\n        <span\n          className=\"textfield__empty\"\n        >\n          Type the text to input field\n        </span>\n      ) : ('')}\n    </div>\n  );\n}\n","C:\\learn_IT\\projects\\react-login-form\\src\\components\\EditForm\\EditForm.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":17,"nodeType":"55","messageId":"56","endLine":9,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":14,"column":26,"nodeType":"55","messageId":"56","endLine":14,"endColumn":43},{"ruleId":"53","severity":1,"message":"58","line":28,"column":16,"nodeType":"55","messageId":"56","endLine":28,"endColumn":23},{"ruleId":"53","severity":1,"message":"59","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":19},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'setUsers' is assigned a value but never used.","Identifier","unusedVar","'setUsersFromLocal' is assigned a value but never used.","'setTabs' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]